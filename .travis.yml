# Based on https://docs.travis-ci.com/user/languages/c

language: c

matrix:
  include:

    - os: linux
      dist: trusty
      sudo: false
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
      env:
        - BUILD_TYPE=RelWithDebInfo MATRIX_EVAL="CC=clang-4.0"

    - os: linux
      dist: trusty
      sudo: false
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
      env:
        - BUILD_TYPE=Debug MATRIX_EVAL="CC=clang-4.0" CTEST_ARGS="-LE long"

#
# installing clang-5.0 fails ??
#
#   - os: linux
#     dist: trusty
#     sudo: false
#     addons:
#       apt:
#         sources:
#           - llvm-toolchain-trusty-5.0
#         packages:
#           - clang-5.0
#     env:
#       - BUILD_TYPE=RelWithDebInfo MATRIX_EVAL="CC=clang-5.0"

    - os: linux
      dist: trusty
      sudo: false
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-5
      env:
        - BUILD_TYPE=RelWithDebInfo MATRIX_EVAL="CC=gcc-5"

    - os: linux
      dist: trusty
      sudo: false
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
      env:
        - COVERITY=1 BUILD_TYPE=RelWithDebInfo MATRIX_EVAL="CC=gcc-6" CMAKE_EXTRA_ARGS="-DCMAKE_C_FLAGS=-coverage"

    - os: linux
      dist: trusty
      sudo: false
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
      env:
        - BUILD_TYPE=Debug MATRIX_EVAL="CC=gcc-6" CTEST_ARGS="-LE long"

#
# Too long wait time for OSX builds to start
#
#   - os: osx
#     osx_image: xcode8
#     env:
#       - BUILD_TYPE=RelWithDebInfo MATRIX_EVAL="brew install gcc && CC=gcc-6"
#
#   - os: osx
#     osx_image: xcode8
#     env:
#       - BUILD_TYPE=RelWithDebInfo MATRIX_EVAL=""

before_install:
    - eval "${MATRIX_EVAL}"

script:
    - mkdir build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE $CMAKE_EXTRA_ARGS ..
    - make VERBOSE=1
    - ctest --output-on-failure $CTEST_ARGS

after_success:
    - if [[ $COVERITY -eq 1 ]]; then bash <(curl -s https://codecov.io/bash) ; fi
